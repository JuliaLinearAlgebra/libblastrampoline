steps:
  - label: ":rocket: Launch matrix of options"
    commands: |
      # These variables are available for templating in our child pipelines
      export JULIA_VERSION OS ARCH AGENT_ARCH ROOTFS_URL ROOTFS_HASH DOCKER_IMAGE

      function upload_pipeline() {
        buildkite-agent pipeline upload .buildkite/test_$${OS}.yml
      }

      # We'll test on the following julia versions
      for JULIA_VERSION in 1.10 nightly; do
        # First, linux
        OS="linux"
        
        ARCH="x86_64"
        AGENT_ARCH="x86_64"
        ROOTFS_URL="https://github.com/JuliaCI/rootfs-images/releases/download/v7.5/package_linux.x86_64.tar.gz"
        ROOTFS_HASH="c615fcc0a6923d520f11cc17934d4f7ea2ddb78d"
        upload_pipeline

        # We still schedule this one on an x86_64 machine, but use an i686 rootfs
        ARCH="i686"
        AGENT_ARCH="x86_64"
        ROOTFS_URL="https://github.com/JuliaCI/rootfs-images/releases/download/v7.5/package_linux.i686.tar.gz"
        ROOTFS_HASH="6c24bdecd727cc6027039e2514d1d5a6490a99fd"
        upload_pipeline

        ARCH="aarch64"
        AGENT_ARCH="aarch64"
        ROOTFS_URL="https://github.com/JuliaCI/rootfs-images/releases/download/v7.5/package_linux.aarch64.tar.gz"
        ROOTFS_HASH="c4223131e1c45aa676d5feca888668477d6e69a4"
        upload_pipeline

        ARCH="powerpc64le"
        AGENT_ARCH="powerpc64le"
        ROOTFS_URL="https://github.com/JuliaCI/rootfs-images/releases/download/v7.5/package_linux.powerpc64le.tar.gz"
        ROOTFS_HASH="34e09e7c13821ce690c86a7e92307171965a9eb8"
        upload_pipeline


        # Next, windows
        OS="windows"
        ARCH="x86_64"
        AGENT_ARCH="x86_64"
        DOCKER_IMAGE="juliapackaging/package-windows-x86_64:v7.5"
        upload_pipeline

        # same as for Linux, we schedule on an x86_64 machine, but use an i686 docker image
        OS="windows"
        ARCH="i686"
        AGENT_ARCH="x86_64"
        DOCKER_IMAGE="juliapackaging/package-windows-i686:v7.5"
        upload_pipeline
        


        # Finally, macOS
        OS="macos"
        for ARCH in x86_64; do
          AGENT_ARCH="$${ARCH}"
          upload_pipeline
        done
      done

      # We don't have nightly or 1.10 for this one, we have to use Julia v1.7
      JULIA_VERSION="1.7"
      ARCH="armv7l"
      AGENT_ARCH="armv7l"
      ROOTFS_URL="https://github.com/JuliaCI/rootfs-images/releases/download/v7.5/package_linux.armv7l.tar.gz"
      ROOTFS_HASH="1fcb42491944e00429fa3cab96692d3795435d50"
      OS="linux"
      upload_pipeline
    agents:
      queue: "juliaecosystem"

  - label: "func_list idempotency"
    commands: |
      cd ext/gensymbol
      ./generate_func_list.sh
      git diff --exit-code
    agents:
      queue: "juliaecosystem"
      os: "linux"
      arch: "x86_64"
